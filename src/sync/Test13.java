package sync;

/**
 * 偏向锁
 *
 * 锁的级别是由jvm控制的
 *
 */
public class Test13 {
    Object o=new Object();
    public void m(){
        //这种情况导致每个线程一个锁,会转换为偏向锁
        o=new Object();
        synchronized (o){

        }
    }

    /**
     * 轻量级锁
     *
     * 过渡锁,当偏向锁不满足,也就是有多线程并发访问,锁定同一个对象的时候,
     * 先提升为轻量级锁
     * 当两个线程争抢锁标记的时候,优先使用轻量级锁
     *
     * 两个线程有可能出现重量级锁
     */


    /**
     * 自旋锁
     *
     * 是一个过渡锁,是偏向锁和轻量级锁的过渡
     *
     * 当获取锁的过程中,为获取到,为了提高效率,jvm自动 执行若干次控循环
     * 再次申请锁,而不是进入阻塞状态,称之为自旋锁
     * 自旋锁提高效率就是避免线程状态的变更
     */
}
